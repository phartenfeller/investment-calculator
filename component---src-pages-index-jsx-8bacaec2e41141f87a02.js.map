{"version":3,"sources":["webpack:///./src/components/labelInput.jsx","webpack:///./src/components/calculator.jsx","webpack:///./src/pages/index.jsx"],"names":["LabelInput","text","value","setter","id","replace","getIdFromText","className","htmlFor","type","onChange","e","eventValue","target","parseFloat","undefined","Calculator","useState","startCapital","setStartCapital","monthSavings","setMonthSavings","interestRate","setInterestRate","years","setYears","result","setResult","onClick","res","toFixed","IndexPage","title","to"],"mappings":"uIA0CeA,G,UAnCI,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAC3BC,EALc,SAAAH,GACpB,OAAOA,EAAKI,QAAQ,KAAM,KAIfC,CAAcL,GAUzB,OACE,yBAAKM,UAAU,QACb,2BAAOA,UAAU,QAAQC,QAASJ,GAChC,0BAAMG,UAAU,+BAA+BN,GAC/C,yBAAKM,UAAU,IACb,2BACEA,UAAU,+JACVH,GAAIA,EACJK,KAAK,SACLP,MAAOA,EACPQ,SAAU,SAAAC,GAAC,OAlBJC,EAkBiBD,EAAEE,OAAOX,WAhBvCC,EADES,EACKE,WAAWF,QAEXG,GAJM,IAAAH,UCuCJI,EA9CI,WAAO,IAAD,EACiBC,mBAAS,GAA1CC,EADgB,KACFC,EADE,OAEiBF,mBAAS,GAA1CG,EAFgB,KAEFC,EAFE,OAGiBJ,mBAAS,GAA1CK,EAHgB,KAGFC,EAHE,OAIGN,mBAAS,GAA5BO,EAJgB,KAITC,EAJS,OAKKR,qBAArBS,EALgB,KAKRC,EALQ,KAavB,OACE,0BAAMpB,UAAU,eACd,kBAAC,EAAD,CACEN,KAAK,mBACLC,MAAOgB,EACPf,OAAQgB,IAEV,kBAAC,EAAD,CACElB,KAAK,kBACLC,MAAOkB,EACPjB,OAAQkB,IAEV,kBAAC,EAAD,CAAYpB,KAAK,QAAQC,MAAOsB,EAAOrB,OAAQsB,IAC/C,kBAAC,EAAD,CACExB,KAAK,gBACLC,MAAOoB,EACPnB,OAAQoB,IAEV,4BACEd,KAAK,SACLF,UAAU,2EACVqB,QAAS,kBAzBPC,IADUX,EAA8B,GAAfE,EAAoBI,GAC5BF,GAAcQ,QAAQ,QAC7CH,EAAUE,GAHO,IAEXA,IAsBJ,aAOA,yBAAKtB,UAAU,gBACb,yCACA,0BAAMA,UAAU,kCAAkCmB,M,kCC5B3CK,UARG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAAC,EAAD,MACA,kBAAC,OAAD,CAAMC,GAAG,YAAT","file":"component---src-pages-index-jsx-8bacaec2e41141f87a02.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst getIdFromText = text => {\n  return text.replace(/ /g, '-');\n};\n\nconst LabelInput = ({ text, value, setter }) => {\n  const id = getIdFromText(text);\n\n  const setValue = eventValue => {\n    if (eventValue) {\n      setter(parseFloat(eventValue));\n    } else {\n      setter(undefined);\n    }\n  };\n\n  return (\n    <div className=\"my-3\">\n      <label className=\"block\" htmlFor={id}>\n        <span className=\"text-gray-700 font-semibold\">{text}</span>\n        <div className=\"\">\n          <input\n            className=\"bg-gray-200 border-2 border-gray-200 appearance-none rounded py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-indigo-400\"\n            id={id}\n            type=\"number\"\n            value={value}\n            onChange={e => setValue(e.target.value)}\n          />\n        </div>\n      </label>\n    </div>\n  );\n};\n\nLabelInput.propTypes = {\n  text: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  setter: PropTypes.func.isRequired\n};\n\nexport default LabelInput;\n","import React, { useState } from 'react';\nimport LabelInput from './labelInput';\n\nconst Calculator = () => {\n  const [startCapital, setStartCapital] = useState(0);\n  const [monthSavings, setMonthSavings] = useState(0);\n  const [interestRate, setInterestRate] = useState(0);\n  const [years, setYears] = useState(0);\n  const [result, setResult] = useState();\n\n  const calcResult = () => {\n    const capital = startCapital + monthSavings * 12 * years;\n    const res = (capital * interestRate).toFixed(2);\n    setResult(res);\n  };\n\n  return (\n    <form className=\"text-center\">\n      <LabelInput\n        text=\"Starting Capital\"\n        value={startCapital}\n        setter={setStartCapital}\n      />\n      <LabelInput\n        text=\"Monthly Savings\"\n        value={monthSavings}\n        setter={setMonthSavings}\n      />\n      <LabelInput text=\"Years\" value={years} setter={setYears} />\n      <LabelInput\n        text=\"Interest Rate\"\n        value={interestRate}\n        setter={setInterestRate}\n      />\n      <button\n        type=\"button\"\n        className=\"rounded bg-indigo-700 py-2 px-4 text-lg font-bold text-white shadow my-4\"\n        onClick={() => calcResult()}\n      >\n        Calculate\n      </button>\n      <div className=\"text-lg py-2\">\n        <span>Result:</span>\n        <span className=\"font-bold text-indigo-900 ml-2\">{result}</span>\n      </div>\n    </form>\n  );\n};\n\nexport default Calculator;\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport Calculator from '../components/calculator';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport '../styles/tailwind.css';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <Calculator />\n    <Link to=\"/page-2/\">Go to page 2</Link>\n  </Layout>\n);\n\nexport default IndexPage;\n"],"sourceRoot":""}